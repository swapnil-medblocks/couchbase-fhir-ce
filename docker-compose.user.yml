###################################################################################################
# Couchbase FHIR CE - User Deployment Compose File
#
# This file is the "prebuilt images" version used by the one-liner installer (install.sh).
# It intentionally:
#   * Uses pre-published container images (no local build context)
#   * Exposes ONLY port 80 via HAProxy (frontend + API routed internally)
#   * Mounts the provided config.yaml into the backend container read-only
#
# Image Tags:
#   Override by exporting FHIR_BACKEND_TAG / FHIR_FRONTEND_TAG before running install.sh, e.g.:
#     FHIR_BACKEND_TAG=v1.0.0 FHIR_FRONTEND_TAG=v1.0.0 bash install.sh ./config.yaml
#   Defaults below fall back to latest if not set.
#
# To run manually (after install.sh has laid down files):
#   docker compose pull && docker compose up -d
#
# NOTE: For local development (building images from source) use the root-level docker-compose.yaml
#       which has build contexts instead of static image references.
###################################################################################################

services:
  fhir-server:
    image: ghcr.io/couchbaselabs/couchbase-fhir-ce/fhir-server:${FHIR_BACKEND_TAG:-latest}
    # Map container process to host UID/GID to improve bind-mount write compatibility.
    # Override by exporting FHIR_RUN_UID / FHIR_RUN_GID prior to running install.sh.
    # If unset, defaults (1000:1000) are used which match common non-root IDs.
    user: "${FHIR_RUN_UID:-1000}:${FHIR_RUN_GID:-1000}"
    mem_limit: 3g
    mem_reservation: 2g
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DEPLOYED_ENV: container
      # Tomcat thread pool tuning (tune for your load)
      SERVER_TOMCAT_THREADS_MAX: 100 # Max threads (was 50, increase for higher concurrency)
      SERVER_TOMCAT_THREADS_MIN_SPARE: 20 # Minimum idle threads
      SERVER_TOMCAT_ACCEPT_COUNT: 200 # Queue size when all threads busy
      SERVER_TOMCAT_MAX_CONNECTIONS: 300 # Max simultaneous connections
      SERVER_TOMCAT_CONNECTION_TIMEOUT: 20s # Connection timeout
      SERVER_TOMCAT_MAX_KEEP_ALIVE_REQUESTS: 1000 # Keep-alive requests per connection
      JAVA_TOOL_OPTIONS: >-
        -Xms1g
        -Xmx2g
        -Xss512k
        -XX:MaxDirectMemorySize=512m
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/app/logs/heap.hprof
        -XX:+ExitOnOutOfMemoryError
        -Xlog:gc*:file=/app/logs/gc.log:time,uptime,level,tags:filecount=5,filesize=10M
    volumes:
      - ./config.yaml:/config.yaml:ro
      - ./logs:/app/logs # Added volume mount to access JFR and other log files
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    expose:
      - "8080" # internal only; not published directly
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    restart: unless-stopped

  fhir-admin:
    image: ghcr.io/couchbaselabs/couchbase-fhir-ce/fhir-admin:${FHIR_FRONTEND_TAG:-latest}
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    depends_on:
      - fhir-server
    expose:
      - "80" # internal only; served via haproxy
    restart: unless-stopped

  haproxy:
    image: haproxy:2.9-alpine
    ports:
      - "80:80" # public entry point
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - fhir-admin
      - fhir-server
    restart: unless-stopped

volumes: {}
# End of file
